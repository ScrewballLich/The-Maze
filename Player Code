//variables for the player, pointer, and bullets
let player;
let pointer;
let bullets = [];

//variable which set the speed of the player and bullets
let bulletSpeed = 5
let moveSpeed = 5;

//creates the canvas and sets up the player and pointer.
function setup() {
  createCanvas(400, 400);
  player = new playerCharacter(width/2,height/2);
  pointer = new Pointer();
  rectMode(CENTER);
}

function draw() {
  background(220);
  
  //draws and updates the pointer
  pointer.direct();
  pointer.display();
  
  //draws and updates the player
  player.display();
  player.move();
  
  //draws and updates all of the bullets in the bullets array
  for (let i = 0; i < bullets.length; i++){
    bullets[i].display();
    bullets[i].move();
  }
}

//player object
function playerCharacter(x_,y_) {
  this.x = x_ //player's X position
  this.y = y_ //player's Y position
  
  //displays the player
  this.display = function () {
    strokeWeight(1);
    square(this.x, this.y, 20);
  };
  
  //moves the player (and pointer) around when certain keys are pressed. You can either use the arrow keys or W, A, S, and D.
  this.move = function(){
    if (keyIsDown(RIGHT_ARROW)){
      this.x = this.x + moveSpeed;
    } else if (keyIsDown(68)){
      this.x = this.x + moveSpeed;
    }
    
    if (keyIsDown(DOWN_ARROW)){
      this.y = this.y + moveSpeed;
    } else if (keyIsDown(83)){
      this.y = this.y + moveSpeed;
    }
    
    if (keyIsDown(LEFT_ARROW)){
      this.x = this.x - moveSpeed;
    } else if (keyIsDown(65)){
      this.x = this.x - moveSpeed;
    }
    
    if (keyIsDown(UP_ARROW)){
      this.y = this.y - moveSpeed;
    } else if (keyIsDown(87)){
      this.y = this.y - moveSpeed;
    }
  }
}

//pointer object
function Pointer(){
  
  //sets the distance the pointer is from the player, as well as its initial x and y position
  this.distance = 30;
  this.x = player.x + this.distance;
  this.y = player.y;
  
  //trigonometry magic which figures out the location of the pointer (if you want to figure out what's going on here and write a proper explanation then be my guest)
  this.direct = function(){
    let angleCoef = atan2(mouseY - player.y, mouseX - player.x);
    this.x = player.x + this.distance * cos(angleCoef);
    this.y = player.y + this.distance * sin(angleCoef);
  }
  
  //displays the pointer
  this.display = function(){
    strokeWeight(4)
    point(this.x,this.y)
  }
}

//bullet object. Could maybe be reused for other projectiles if we feel like giving the enemies guns
function projectile(x_,y_){
  
  //sets the bullet's initial x and y positions, which should be wherever the pointer is at.
  this.x = x_
  this.y = y_
  
  //more trigonometry magic! This time, it figures out how fast the bullets should be moving along the X and Y axis
  let angleCoef = atan2(mouseY - player.y, mouseX - player.x);
  this.xVelocity = bulletSpeed * cos(angleCoef)
  this.yVelocity = bulletSpeed * sin(angleCoef)
  
  //displays the bullets
  this.display = function () {
    strokeWeight(3)
    point(this.x, this.y)
  }
  
  //moves the bullets
  this.move = function () {
    this.x = this.x + this.xVelocity
    this.y = this.y + this.yVelocity
  }
}

//makes a new bullet whenever the mouse is pressed, then adds it to the array of bullets.
function mousePressed(){
  let bullet = new projectile(pointer.x,pointer.y)
  bullets.push(bullet);
}
